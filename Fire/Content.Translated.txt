*** ea019251e9a1e995aee56207db61702e
## 这个模型是什么？

这个模型模拟了森林大火的蔓延过程。它演示了从左侧起火点火焰开始向右蔓延时， 森林中树木的密度决定了是否会烧毁整个森林的概率。这个模型表明了在复杂系统中事件发生的概率也许不是线性变化的，而是存在有转折意义的关键参数（或称为非线性阈值）。这种特性在复杂系统中十分常见。

## 这个模型是怎么运行的

火焰从世界的左侧进入森林，随即向东南西北四个方向相邻的树木蔓延。 

要注意的是这个模型假设了环境处于无风状态，因此山火要沿着有连续树木的方向进行传播。相反，当火势向某个方向蔓延时，如果树木之间出现间隔（格子），火焰将不能随风飘过间隔的区域蔓延到对面的树丛中。因此，这样的格子会阻断火势向这个方向的蔓延。

## 如何这个模型怎么用

点击Setup（设置）按钮来设置树木（绿色区域）和火势（红色区域）。

点击Go（运行）按钮来启动模型。

Density（密度）滑块的功能是来控制森林中树木的密度。（注意：调整密度滑块的数值后并不会立即反映正在运行中的模型上，而需要重新设置模型才能按照新的树木密度来运行）。

## 看一看

请仔细看一看，当你运行这个模型时，有多少树木被烧毁？ 使用相同的参数，重新运行一次模型，比较这两次的结果，请问被烧毁的树木是否完全一致？ 比较一下两次烧毁的树木有哪些相似之处。

在这个模型中，每增加一只海龟，代表燃起了一小片火焰。作为火焰，每只海龟直到熄灭（从红色变为黑色）都不会移动位置。请你想一想，如果火势是由一只只无法移动的海龟构成，那火势的蔓延是怎么形成的呢？这个模型展示了复杂系统中的不同层面的变化。对于每一只海龟个体而言，他们并没有移动，但是从整个海龟群体来说，他们的变化解释了火势的变化。

## 试一试

如果把树木的密度设置到55%，在这样的条件下火势几乎不可能蔓延至整个森林。如果把树木的密度设置为70%，此时几乎可以肯定火势会蔓延到整个森林。这种从几乎不可能蔓延到一定会蔓延的急剧转变发生在树木密度大约为59%的情况下。 当树木密度为59%时，火势有50%的几率蔓延到整个森林。

尝试更改地格的大小（“模型设置”中的“max-pxcor”和“max-pycor”）。它会改变火的燃烧行为吗？

## 改一改

如果火焰可以沿着对角线方向蔓延，模型会发生怎样的变化呢？ 你可以试着把代码中的 neighbors4 改为 neighbors 来实现。 这个改动会怎样改变火势从左侧蔓延到最右端（即覆盖整个森林）的概率呢？ 在这个新的模型当中，能改变火势传播的“关键密度”的数值又是多少呢？ 

向模型添加风向，以便林火可以在某些方向蔓延更远。

你也可以试试看给程序添加自己植树的功能。怎样的树林会使得火焰能够穿过森林？反之，怎样的树林会阻断火势的蔓延？为什么树木密度超过59%的森林有比较大的可能能使火势覆盖整个森林？为什么当树木密度达到59%时，火势覆盖整个森林的可能性快速增长？ 

##  NetLogo 语言特性

绿色的格子表示还没有被火势蔓延的树林， 红色的海龟则表示正在燃烧的树林。这个程序中海龟有两个种类， “火焰”和“灰烬”。 当一棵树被点燃时， 程序会创造一个新的海归表示燃烧的火焰， 火焰会在下一时刻燃尽变成灰烬。 你可以注意看一看程序是怎么样通过逐渐加深灰烬的颜色来达到燃尽的视觉效果的。

Neighbors4 属性是用来调整火焰蔓延的方式的。

你也可以不用海龟，只利用格子来模拟森林火灾蔓延的模型。这样反而会让程序变得更简单。但是如果只用格子，每一个时刻，程序必须更新所有的格子的状态，这样会大大增加计算量，导致程序运行的速度变慢。相反，如果引入海龟，我们可以利用海龟来限制需要更新的部分，我们只需要关注火势边缘的变化，就可以加快程序运行。

你可以查看”CA 1D Rule 30”和“CA 1D Rule 30”两个例子来对比使用海龟和只使用格子的代码。

## 相关模型

* Percolation
* Rumor Mill

## 引用和致谢

https://en.wikipedia.org/wiki/Forest-fire_model

## 如何引用本模型

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (1997).  NetLogo Fire model.  http://ccl.northwestern.edu/netlogo/models/Fire.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## 版权和授权

Copyright 1997 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the project: CONNECTED MATHEMATICS: MAKING SENSE OF COMPLEX PHENOMENA THROUGH BUILDING OBJECT-BASED PARALLEL MODELS (OBPML).  The project gratefully acknowledges the support of the National Science Foundation (Applications of Advanced Technologies Program) -- grant numbers RED #9552950 and REC #9632612.

This model was developed at the MIT Media Lab using CM StarLogo.  See Resnick, M. (1994) "Turtles, Termites and Traffic Jams: Explorations in Massively Parallel Microworlds."  Cambridge, MA: MIT Press.  Adapted to StarLogoT, 1997, as part of the Connected Mathematics Project.

This model was converted to NetLogo as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227. Converted from StarLogoT to NetLogo, 2001.

翻译者：Ichi Yuan
校对者：John Chen