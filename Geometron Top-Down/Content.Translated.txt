*** 1d9b324d51b0a5cdea13d2e026a86a1c
## 这个模型是什么？

该模型使用海龟反复绘制圆圈和其他几何形状，同时周期性转动产生看起来像万花筒和风车的复杂图案。它展示了即使是简单的规则也可以创建复杂而美丽的模式。

## 这个模型是怎么运行的

###模式-1
在这种模式中，每第 10 只海龟向前移动 0.5 步并向右移动 DIRECTION 度。每次调用该模式都会孵化出一只海龟，它执行 RIGHT-CIRCLE 函数，然后执行 LEFT-CIRCLE 函数，然后死亡。通过增加方向，海龟会增加它们向右转的度数。这意味着在每次向前移动时，海龟都会围绕中心点转得更紧。因此，当 DIRECTION 设置为 0 时，海龟只是向前移动。它增加得越多，比如从 0 到 1 到 2 到 10，海龟运动变得越圆。尽管图案发生了变化，但必须明白，正在创建的基础图形是一个圆形。

###模式2
每只偶数的海龟向前移动 1 步并向右转 1 度。然后它孵化出执行 HEXAGON 功能的海龟，然后死去。每只奇数的海龟向前移动 1 步并向左转 1 度。然后它孵化出执行 OCTAGON 功能的海龟，然后死去。有趣的是，当 NUM-TURTLES滑块升高到一个高数字时，即大于或等于 20，较低数字中的模式变得无法识别。然而，必须理解的是，尽管新图案可能看起来有所不同，但所制作的基本形状仍然是六边形和八边形。

###模式-3
每第 5 只海龟向前移动 0.5 步并向右转 DIRECTION 度。然后它孵化出执行 PENTAGON 功能的海龟，然后死去。就解释其行为而言，PATTERN-3 和 PATTERN-5 可能是该模型中最简单的模式。基本上，PATTERN-3 创建了五边形，但由于海龟向前移动 0.5 并向右 DIRECTION 度数移动，这就是导致模式发生巨大变化的原因。幻觉是孵出的海龟以某种方式创造出不同的形状，但事实是它们正在制作五边形，而且永远都会制作五边形。只有外部影响的微小变化才会导致模式发生变化。

###模式-4
每第 3 只海龟右转 1 度，然后孵化出执行 NINE-GON 功能的海龟，然后死亡。所有其他海龟都左转 1 度，然后孵化出执行 LEFT-CIRCLE 功能的海龟，然后死亡。

###模式5
每只海龟孵化出另一只海龟，执行 LEFT-SQUARE 函数，然后死亡。

###模式6
每只海龟向前移动方向步骤，然后孵化出一只海龟，它按以下顺序执行以下功能：九边形、八边形、右圆、五边形、六边形和左圆。完成这些功能后，每只孵化出的海龟都会死去。

## 这个模型怎么用

将 NUM-TURTLES 设置为 0 到 36 之间的所需值（默认值为 10）。 NUM-TURTLES 决定了你想要开始的初始海龟数量。这些最初的海龟会产卵其他造形海龟。

将 COLOR-SEP 设置为 0 到 30 之间的所需值（默认值为 2）。 COLOR-SEP 确定海龟（以及万花筒）将呈现的颜色范围。值越高，范围越小。

将 MAX-NUM 设置为 1024 到 8192 之间的所需值（默认值为 4096）。 MAX-NUM 决定了世界上任何时候可以存在的最大海龟数量。但是请注意，较高的值会使模型运行速度变慢。

设置好 COLOR-SEP 和 NUM-TURTLES 后，按 SETUP 按钮设置模型。

接下来，选择一种模式。在每个图案中，最初的海龟孵化出其他海龟，孵化出的海龟绘制出不同的几何形状。每个模式都由一个永久按钮表示。用户不能更改 PATTERN-2、PATTERN-4 或 PATTERN-6。但是，PATTERN-1、PATTERN-3 和 PATTERN-5 允许用户使用 DIRECTION 和 EXPANDER 滑块进行控制。有关每个模式中指令的详细说明，请转到信息窗口的末尾。

滑块DIRECTION（默认值为 2）专为 PATTERN-1 和 PATTERN-3 而设计。在每个循环中，DIRECTION 确定制图海龟向右转的数量。换句话说，如果 DIRECTION 设置为 12，则每只海龟将在向前移动之前向右转 12 度。

滑块EXPANDER 专为模式 5 设计（默认值为 80）。在 PATTERN-5 的每个循环中，EXPANDER 确定多边形的每条腿有多大。

用户还可以控制每个图案所显示的颜色分布。 COLOR-SHIFT 按钮将连续增加或减少 &#39;curr-color-sep&#39; 的值一个小的随机量。因此滑块值本身没有改变，但是海龟的颜色值改变了。 SHIFT-DIRECTION 选择器决定 &#39;curr-color-sep&#39; 是增加还是减少。

该模型的其他功能是 LIFT-PEN 和 RESTORE 按钮。 LIFT-PEN 对所有海龟画笔并杀死所有大于 NUM-TURTLES 的海龟。 RESTORE 杀死所有大于 NUM-TURTLES 的海龟，并告诉所有海龟画笔。杀死所有大于 NUM-TURTLES 的海龟将恢复世界上原来的海龟数量。

一个可以与 LIFT-PEN 和 RESTORE 按钮结合使用的有用工具是一个名为 FOLLOW-TURTLE 的开关。当您在没有打开 FOLLOW-TURTLE 的情况下按下 LIFT-PEN 时，您会看到图案的骨架，因为海龟在移动时没有画笔。但是当开关打开时，一只孵出的海龟会画笔。然而，由于海龟不断地出生和死亡，这只特定的海龟可能需要一段时间才能出现。还应该理解的是，由于某些图案将海龟分成不同的组并为它们分配不同的形状来创建，因此可能会告诉不止一只海龟画笔以表示图案中所有海龟正在做的事情.

界面窗口底部提供了两个监视器。 COUNT-TURTLES 显示世界上当前的海龟数量。同样，CURR-COLOR-SEP 显示该变量的值，以便您知道它何时被更改以及更改了多少。

## 看一看

这里需要注意的一件重要事情是 COUNT-TURTLES 中给出的数字。马上，它变得比 NUM-TURTLES 大得多，但很快就确定了一个不错的大数字。查看“代码”选项卡。最初，在设置时，有 NUM-TURTLES海龟。一旦按下其中一个模式按钮，这些海龟中的每只都会重复孵化一只新海龟并转动指定的角度。

重要的是要理解这种现象，即最初的 NUM-TURTLES 爆炸成一个比 NUM-TURTLES 大得多的数字的事实是因为在孵化一只海龟和它完成画图它的时间之间正在孵化其他海龟图形。因此，如果我们要在其中一个模式中添加一个“wait”语句，那么孵化出的海龟就不会那么多了。换句话说，大于 NUM-TURTLES 的海龟数量会减少。由于海龟执行命令的速度比孵化的海龟快得多，因此它们在一个模式循环中会产生许多海龟；然而，最终，海龟开始死亡。此时，出生的海龟数量大致等于在任何给定步骤死亡的海龟数量。

您还应该注意 COLOR-SEP（在代码中称为“current-color-sep”）如何改变图案的外观。打开 COLOR-SHIFT，让“current-color-sep”变得非常大。然后观察当它很小时会发生什么，可能是零或某个负数。

## 试一试

尝试使用 PATTERN-1 和 PATTERN-3 上的 DIRECTION滑块和 PATTERN-5 上的 EXPANDER滑块。当您更改每个值时，观察模式会发生什么。 GEOMETRON-TOP-DOWN 旨在成为一个仅供观看的视觉上令人愉悦的模型。查看 COLOR-SEP 产生的不同值，并探索 COLOR-SHIFT 如何改变万花筒的外观。什么对你来说最好？

尝试更改“代码”选项卡中的代码。增加每只海龟绘制的形状的大小，或尝试改变每只海龟转动的角度大小。

与其让每只海龟移动或转动一个给定的量，不如让它移动一个小的随机量（就像从 COLOR-SHIFT 到 curr-color-sep 的变化一样）。您可以为“万花筒”添加多少随机性并仍然保持某种整体结构？

运行其中一种模式后，尝试更改 NUM-TURTLES 的数量，然后停止该模式并按下 CLEAR-PATCHES-LIFT-PEN。然后再次开始模式。会发生什么？你能解释为什么会这样吗？

尝试在运行期间更改 MAX-NUM滑块，会发生什么情况？你能解释为什么会这样吗？

## 改一改

每当一只海龟被 NUM-TURTLES 中的一只孵化时，它就会开始绘制特定的图案。更改“hatch”中的命令，以便海龟绘制其他图形或图案。尝试预测会出现什么整体图形。

尝试编写一种全新的 GEOMETRON-TOP-DOWN 项目。在当前项目中，海龟从 NUM-TURTLES海龟的中心核心分离出来。在你的新项目中，也许画图的海龟可以绕着一些固定的（或移动的）点观察 NetLogo 项目“n-bodies”和“gravitation”。

## NetLogo 语言特性

GEOMETRON-TOP-DOWN 很好地利用了海龟原语“hatch”。每当海龟孵化时，它都会执行 `hatch` 命令后面的命令列表。通常它所做的只是改变它的颜色或改变一些变量——没有理由它不能运行一些其他的、可能很长的过程。这正是这里发生的事情。

该模型是 NetLogo 模型库中使用“连续”显示更新模式的罕见模型之一。这是因为该模型没有“周期”的概念，因为每只海龟都在并行遵循一组规则。

## 形状注释

以下是此模型中用于创建六种图案的所有基本图形函数的列表。重要的是要理解图案的复杂性实际上只不过是这些图形函数的不同组合。例如，pattern-1 使用右形和左形函数。这两个函数都只是画圆。但是，通过对海龟的行为和哪些海龟的行为进行细微的改动，就可以创建由 pattern-1 表示的模式。事实上，这是模型用来创建所有模式的基本算法。采用基本的图形函数，对海龟所做的事情添加细微的变化，然后选择哪些海龟来做。

关于右圈：
执行以下过程180 次：
前进 1.5 步，右转 2 度。
要查看此函数创建的图形，请尝试在命令中心用一只海龟按下画笔来调用它。
海龟将创建一个圆圈，朝着正确的方向方向。

关于左圈：
执行以下过程180 次：
向前移动 1.5 步并向左转 2 度。
要查看此函数创建的图形，请尝试在命令中心用一只海龟按下画笔来调用它。
海龟将创建一个向左方向的方向。

关于左方：
执行以下过程4 次：
向前移动 EXPANDER 步并右转 90 度。
要查看此函数创建的图形，请尝试在命令中心用一只海龟按下画笔来调用它。
海龟将在左侧方向创建一个正方形方向。

关于直角三角形：
执行以下过程3 次：
前行35步，右转120度。
要查看此函数创建的图形，请尝试在命令中心用一只海龟按下画笔来调用它。
海龟将创建一个朝正确方向方向的三角形。

关于八角：
执行以下过程8 次：
前进30步，右转45度。
要查看此函数创建的图形，请尝试在命令中心用一只海龟按下画笔来调用它。
海龟会朝正确的方向创建一个八角形方向。

关于五角大楼：
执行以下过程5 次：
前行35步，右转72度。
要查看此函数创建的图形，请尝试在命令中心用一只海龟按下画笔来调用它。
海龟会朝着正确的方向创建一个五边形方向。

关于海克斯康：
执行以下过程6 次：
前进30步，右转60度。
要查看此函数创建的图形，请尝试在命令中心用一只海龟按下画笔来调用它。
海龟将在正确的方向上创建一个六边形方向。

关于九坤：
执行以下过程9 次：
前行35步，右转40度。
要查看此函数创建的图形，请尝试在命令中心用一只海龟按下画笔来调用它。
海龟会朝正确的方向创建一个九边形方向。

## 代码注释

请注意，在这些函数中的每一个中，过程重复的次数乘以海龟向右或向左转动的度数等于 360 度。这意味着每只海龟都在创建一个多边形。

我发现，在海龟向前移动数步然后向右或向左转某个方向的模式中，这个动作会显着改变模式。例如，在模式 1 中，每只孵化的海龟向前移动 0.5 步意味着 RIGHT-CIRCLE 或 LEFT-CIRCLE 函数生成的图形将类似于芸豆而不是圆形，这正是 RIGHT-CIRCLE和 LEFT-CIRCLE 功能是专门用来制作的。

重要的是要了解这些图案之所以能够被创建，是因为它们遵守有关几何的某些基本规则。例如，我上面提到的所有函数都创建多边形。这是因为每个多边形的内角和必须等于 360 度。然而，像上面提到的那样的某些细微改动就足以改变图形并创建一个新的形状。例如，如果 DIRECTION滑块在 pattern-1 中从 0 开始，则每只孵化的海龟在创建其模式时只会向前移动 0.5 步。但是，如果我们以 0.1 的增量增加滑块，我们会注意到它的移动似乎越来越紧，直到它固定在一个地方并一直围绕一个点旋转。

## 如何引用本模型

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (1998).  NetLogo Geometron Top-Down model.  http://ccl.northwestern.edu/netlogo/models/GeometronTop-Down.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## 版权和授权

Copyright 1998 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the project: CONNECTED MATHEMATICS: MAKING SENSE OF COMPLEX PHENOMENA THROUGH BUILDING OBJECT-BASED PARALLEL MODELS (OBPML).  The project gratefully acknowledges the support of the National Science Foundation (Applications of Advanced Technologies Program) -- grant numbers RED #9552950 and REC #9632612.

This model was converted to NetLogo as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227. Converted from StarLogoT to NetLogo, 2001.

<!-- 1998 2001 -->