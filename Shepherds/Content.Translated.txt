*** 1d9b324d51b0a5cdea13d2e026a86a1c
## 这个模型是什么？

这个项目的灵感来自两个更简单的模型：一个是白蚁将木屑收集成堆，另一个是移动的羊。在这个项目中，绵羊随意游荡，而牧羊人四处走动试图放牧它们。绵羊最终是否会成为一个单一的羊群取决于牧羊人的数量以及他们相对于绵羊的移动速度。

## 这个模型是怎么运行的

牧羊人跟随一套简单的规则。每个牧羊人开始随机游荡。如果它撞到一只羊，它会把羊抱起来，继续随意游荡。当它撞到另一只羊时，它会在附近找一个空地，放下它的羊，然后寻找另一只羊。

## 这个模型怎么用

单击设置按钮设置牧羊人（棕色）和绵羊（白色）。单击 GO 按钮开始模拟。牧羊人在牵着一只羊时会变成蓝色。

一共有三个滑块。 NUM-SHEEP 和 NUM-SHEPHERDS 分别控制绵羊和牧羊人的数量。在下一次设置之前，这些滑块中的更改不会生效。

SHEEP-SPEED滑块控制绵羊相对于牧羊人的速度。可以在模型运行时更改此滑块。

模拟运行时，会显示牧羊人的放牧效率图表。这里的放牧效率是通过计算附近没有羊的斑块数量来衡量的：

效率 = 无羊社区 / (# of patches - # of sheep)
[以百分比表示]

当牧羊人放羊时，更多的社区应该是空的。效率的衡量标准是相当随意的；可以制定其他措施。

## 看一看

随着小羊群开始形成，这些羊群并没有受到任何“保护”。也就是说，牧羊人有时会把羊从现有的牛群中带走。该策略似乎适得其反。但如果牛群受到“保护”，你最终会得到很多小牛群，而不是几个大牛群。为什么是这样？

一般来说，如果有足够的牧羊人和/或牧羊人的移动速度比绵羊快得多，那么牛群的数量会随着时间的推移而减少。为什么？一种解释如下：当牧羊人把所有的羊都带走时，一些牛群就消失了。如果羊从不移动，新的牛群就不可能从头开始，因为牧羊人总是把他们的羊放在其他羊附近。因此，牛群的数量必然会随着时间的推移而减少。 （“新”牛群开始的唯一方式是现有牛群一分为二。）但是，由于绵羊移动，它们可以形成新的牛群。如果他们相对于牧羊人移动得太快，放牧就会崩溃。

如果没有足够的牧羊人，或者如果羊相对于牧羊人移动得足够快，牧羊人就跟不上他们的羊的游荡，羊就会分散。

最后的牛群大致是圆形的吗？还有哪些物理情况也会产生圆形的东西？

这个项目是概率和分散策略的一个很好的例子。没有牧羊人负责，也没有专门为牛群预先指定的地点。牧羊人和绵羊的移动以及它们的行为是概率性的。每个牧羊人都遵循一套简单的规则，但整个群体要完成一项相当复杂的任务。

## 试一试

你能找到放牧给定数量的绵羊所需的最少牧羊人数量吗？哪个更有帮助，牧羊人的数量加倍或现有牧羊人的速度加倍（通过将 SHEEP-SPEED 减半）？

一个牧羊人可以在一个群体中饲养多少只羊？

从 SHEEP-SPEED 为零开始（羊留在原地），让牧羊人将它们聚集成群，然后慢慢增加 SHEEP-SPEED。放牧效率如何受到影响？ SHEEP-SPEED需要多高才能让牧羊人无用，即放牧效率恢复到初始值？这就等于说羊的分配不比随机好。

当只剩下两三个牛群时，其中哪一个最有可能“获胜”成为唯一的、最后的牛群？两个群体中较大的一方获胜的频率是多少？如果一个群只有一只羊，而另一个群有剩下的羊，那么第一群获胜的机会有多大？

将此模型与“白蚁”进行比较。它运行速度较慢，但除此之外，结果是否相同？

在 Termites 和 Shepherds 模型中，如果海龟不从它们形成的成堆/成群中跳开，则成堆/成群发生得更慢且程度更小。这有意义吗？尝试不同的搜索命令，除了“fd 1”和“jump 20”之外，你还可以给牧羊人。

## 改一改

你能找到其他衡量放牧效率的方法吗？

你能否扩展模型，使绵羊彼此跟随，趋向于聚集在一起？

你能扩展这个模型让牧羊人从败类中区分出白羊吗？

你能改变模型，让一块格子上永远只有一只羊吗？它会改变模型的行为吗？

目前编写模型的方式，允许多只羊占据同一个物理位置。而且，由于所有牧羊人在他们中的任何一个真正带走他们的羊之前都会寻找一只羊来捡起，因此牧羊人可能会来到一个有几只羊的地方，并随机检查其中一只，发现另一个牧羊人已经抓住了那只羊羊。目前，当发生这种情况时，牧羊人会放弃该位置的所有羊，而不是查看那里是否还有其他无人看管的羊。 （如果牧羊人不检查一只羊是否有人照顾，那么多个牧羊人可能会各自捡起同一只羊并带走，从而克隆它！）你能找到一种方法让牧羊人在离开前检查一个地点的所有羊吗？

真正的牧羊人经常使用牧羊犬来帮助他们放牧。在这种情况下，一只牧羊犬可能会放下一些“吓到”绵羊的化学物质，即流浪的绵羊试图避开它并沿着梯度移动。你能实现牧羊犬并看看它们有多大帮助吗？你能想出一只牧羊犬可以替代多少牧羊犬（以保持相同的放牧效率）或需要多少牧羊犬来替代单个牧羊犬的粗略等价？

由于很难强迫绵羊-乌龟跟随“捡起它们”的牧羊人-乌龟，捡起一只羊的机制实际上涉及“杀死”绵羊并创建一个遵循牧羊人规则四处游荡的绵羊-牧羊人集体直到它找到放羊的地方，此时在该位置“创造”了另一只羊，集体再次恢复为普通牧羊人。你能改变模型，让牧羊人真正放牧羊群，而不是杀死它们并重新创造它们吗？

## NetLogo 语言特性

将此代码与“白蚁”的代码进行比较。它是相似的，除了这里的绵羊和牧羊人都是海龟，而且都是主动的，而在 Termites 中，木屑是补丁并且保持被动。因此，白蚁模型运行得更快。

然而，这两个模型的编码略有不同。 Termites 使用了一个值得注意的 loops-within-GO 结构。 GO 是一个海龟永远的按钮，因此每只海龟都并行且相互独立地执行 GO 函数中的代码。由于每只海龟都按照自己的步调在 GO 函数中移动，因此可以将 search-for-chip 之类的函数编写为循环，重复执行直到满足特定条件。然后每只海龟继续下一个循环。

但在这个模型中，GO 是一个永远的观察者按钮，因为我们想要为绵羊和牧羊人提供单独的“询问”块，并且因为我们想要每隔一段时间更新一次图表。因为观察者在继续下一行代码之前等待所有的海龟完成“询问”，所以一只海龟在“询问”中多走一步是不可行的——因为那样的话所有其他海龟将不得不等待它。那么这个模型不是使用循环，而是使用布尔变量 carrying-sheep？和发现牛群？跟踪每只海龟是处于找羊模式、找牛群模式还是找空地模式。

## 相关模型

* Termites
* Painted Desert Challenge
* State Machine Example

## 引用和致谢

Thanks to Christopher Kribs Zaleta for his help with converting the model from StarLogoT to NetLogo.

## 如何引用本模型

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (1998).  NetLogo Shepherds model.  http://ccl.northwestern.edu/netlogo/models/Shepherds.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## 版权和授权

Copyright 1998 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the project: CONNECTED MATHEMATICS: MAKING SENSE OF COMPLEX PHENOMENA THROUGH BUILDING OBJECT-BASED PARALLEL MODELS (OBPML).  The project gratefully acknowledges the support of the National Science Foundation (Applications of Advanced Technologies Program) -- grant numbers RED #9552950 and REC #9632612.

This model was converted to NetLogo as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227. Converted from StarLogoT to NetLogo, 2001.

<!-- 1998 2001 -->