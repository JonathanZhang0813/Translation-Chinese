*** ea019251e9a1e995aee56207db61702e
## 这个模型是什么？

这个项目的灵感来自两个更简单的模型：一个是白蚁将木屑堆成一堆，另一个是移动的羊。在这个项目中，羊随机游荡，而牧羊人则试图放牧。羊最终是否最终成为一个群取决于牧羊人的数量以及与羊相比他们移动的速度有多快。

## 这个模型是怎么运行的

牧羊人跟随一套简单的规则。每个牧羊人开始随机游荡。如果它碰到一只羊，它会把羊捡起来，然后继续随机游荡。当它撞到另一只羊时，它会在附近找到一块空地，放下它的羊，然后再寻找另一只羊。

## 如何这个模型怎么用

单击 SETUP 按钮设置牧羊人（棕色）和绵羊（白色）。单击 GO 按钮开始模拟。牧羊人在牵羊时会变成蓝色。

有三个滑块。 NUM-SHEEP 和 NUM-SHEPHERDS 分别控制绵羊和牧羊人的数量。这些滑块中的更改在下一次设置之前不会生效。

SHEEP-SPEED滑块控制羊相对于牧羊人的速度。该滑块可以在模型运行时更改。

虽然模拟运行，显示的牧人放牧效率的绘图。这里的放牧效率是通过计算附近没有羊的补丁数量来衡量的：

效率 = 无羊社区/（补丁数量 - 羊数量）
[以百分比表示]

当牧羊人放羊时，更多的街区应该是空的。效率的衡量标准是相当随意的；可以设计其他措施。

## 看一看

当小群羊开始形成时，这些羊群不会以任何方式受到“保护”。也就是说，牧羊人有时会从现有的羊群中带走羊。这种策略似乎适得其反。但是如果牛群受到“保护”，你最终会得到很多小牛群，而不是几个大牛群。为什么是这样？

一般来说，如果有足够多的牧羊人和/或牧羊人的移动速度比羊快得多，则牧群的数量会随着时间的推移而减少。为什么？一种解释如下：当牧羊人带走所有的羊时，一些羊群消失了。如果羊从不移动，新的羊群就不可能从头开始，因为牧羊人总是把他们的羊放在其他羊旁边。因此，随着时间的推移，牛群的数量必然会减少。 （“新”羊群开始的唯一方式是将现有的羊群一分为二。）但是，由于绵羊移动，它们可以形成新的羊群。如果它们相对于牧羊人移动得太快，牧群就会崩溃。

如果没有足够的牧羊人，或者羊相对于牧羊人的移动速度足够快，牧羊人就跟不上羊群的游移，羊就会散去。

最后的牛群大致是圆形的吗？还有哪些物理情况也会产生圆形的东西？

这个项目是概率和分散策略的一个很好的例子。没有牧羊人负责，也没有专门为牧群预先指定的场所。牧羊人和绵羊的运动及其行为是概率性的。每个牧羊人都遵循一套简单的规则，但整个群体完成了一项相当复杂的任务。

## 试一试

你能找到放牧给定数量的羊所需的最少牧羊人数量吗？哪个更有帮助，将牧羊人的数量加倍还是将现有牧羊人的速度加倍（通过将 SHEEP-SPEED 减半）？

一个牧羊人可以养多少只羊？

从 SHEEP-SPEED 为零开始（羊保持不动），让牧羊人将它们聚集成群，然后慢慢增加 SHEEP-SPEED。放牧效率如何受到影响？ SHEEP-SPEED 需要多高才能让牧羊人无用，即放牧效率恢复到初始值？这与说羊的分布并不比随机更好。

当只剩下两三个牛群时，他们中的哪一个最有可能“获胜”作为最后的单一牛群？两个群体中较大的一个多久获胜？如果一个羊群只有一只羊，另一个羊群有其余的羊，那么第一个羊群获胜的机会是多少？

将此模型与“白蚁”进行比较。它运行速度较慢，但除此之外，结果是否相同？

在白蚁和牧羊人模型中，如果海龟不从它们形成的堆/群中跳开，则堆/群发生得更慢且程度更小。这有意义吗？尝试使用除了“fd 1”和“jump 20”之外您可能会给牧羊人的不同搜索命令。

## 改一改

你能找到其他方法来衡量放牧效率吗？

你能扩展这个模型，让绵羊互相跟随，趋向于聚集吗？

你能扩展模型让牧羊人从黑羊中分类白羊吗？

你能改变模型，让格子只有一只羊吗？它会改变模型的行为吗？

模型目前的编写方式，允许多只羊占据同一个物理位置。而且，由于所有牧羊人在他们中的任何一个人真正带走他们的羊之前都会寻找一只羊来捡起，因此牧羊人可能会带着几只羊来到一个地方，并随机检查一只羊，发现另一个牧羊人已经抓住了那只羊羊。目前，当发生这种情况时，牧羊人会放弃该位置的所有羊，而不是查看那里是否还有其他羊无人看管。 （如果牧羊人不检查一只羊是否有人看管，多个牧羊人可能会每个人捡起同一只羊并将其带走，从而克隆它！）你能找到一种方法让牧羊人在离开前检查一个地方的所有羊吗？

真正的牧羊人经常使用牧羊犬来帮助他们放牧。在这种情况下，牧羊犬可能会放下一些“吓唬”羊的化学物质，即流浪的羊试图避开它并沿着梯度向下移动。你能实施牧羊犬，看看它们有多大帮助吗？您能否粗略地计算出一只牧羊犬可以替换多少牧羊犬（以保持相同的放牧效率），或者替换一只牧羊犬需要多少只牧羊犬？

由于很难强迫羊海龟跟随已经“捡起它们”的牧羊龟，因此捡羊的机制实际上涉及“杀死”羊并创建一个牧羊人集体，该集体遵循牧羊人的规则四处游荡直到它找到放置羊的地方，此时在该位置“创造”了另一只羊，并且集体再次恢复为正常的牧羊人。你能改变模型，让牧羊人真正放羊，而不是杀死它们并重新创造它们吗？

## NetLogo 语言特性

将此代码与“白蚁”的代码进行比较。它是相似的，除了这里的羊和牧羊人都是海龟并且是活跃的，而在白蚁中，木屑是补丁并且保持被动。因此，白蚁模型运行得更快。

然而，这两种模型的编码方式略有不同。白蚁使用了一个值得注意的 GO 内循环结构。 GO 是一个海龟永远按钮，因此每个海龟并行且彼此独立地执行 GO 函数中的代码。由于每只海龟以自己的速度在 GO 函数中移动，因此可以将 search-for-chip 等函数写为循环，重复执行直到满足某个条件。然后每只海龟进入下一个循环。

但是在这个模型中，GO 是一个永远的观察者按钮，因为我们想要为绵羊和牧羊人提供单独的“询问”块，并且因为我们想要经常更新绘图。由于观察者等待所有的海龟来完成移动到的下一行代码前的“问”，它不会是OK的海龟采取多个步骤里面的“问” -因为那时所有其他海龟将不得不等待它。因此，该模型没有使用循环，而是使用布尔变量 Carry-sheep？和发现羊群？跟踪每只海龟是否处于寻羊模式、寻群模式或寻空点模式。

## 相关模型

* Termites
* Painted Desert Challenge
* State Machine Example

## 引用和致谢

Thanks to Christopher Kribs Zaleta for his help with converting the model from StarLogoT to NetLogo.

## 如何引用本模型

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (1998).  NetLogo Shepherds model.  http://ccl.northwestern.edu/netlogo/models/Shepherds.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## 版权和授权

Copyright 1998 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the project: CONNECTED MATHEMATICS: MAKING SENSE OF COMPLEX PHENOMENA THROUGH BUILDING OBJECT-BASED PARALLEL MODELS (OBPML).  The project gratefully acknowledges the support of the National Science Foundation (Applications of Advanced Technologies Program) -- grant numbers RED #9552950 and REC #9632612.

This model was converted to NetLogo as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227. Converted from StarLogoT to NetLogo, 2001.

<!-- 1998 2001 -->