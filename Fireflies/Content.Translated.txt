*** 1d9b324d51b0a5cdea13d2e026a86a1c
## 这个模型是什么？

该模型展示了一群萤火虫，它们仅通过个体萤火虫之间的相互作用来同步闪光。它很好地说明了分布式系统（即具有许多交互元素但没有“领导者”的系统）如何在没有任何中央协调者的情况下进行自我协调。

虽然大多数萤火虫物种通常不会在群体中同步，但有些物种（例如 Pteroptyx cribellata、Luciola Pupperla 和 Pteroptyx malaccae）在某些环境下被发现会同步。该模型概括了此类昆虫用于彼此同步的两种主要策略（相位延迟和相位提前同步，如下所述），保留了这些策略的本质，同时淡化了生物学细节。

## 怎么这个模型是怎么运行的

每只萤火虫都会不断地循环自己的时钟，在每个周期开始时闪烁，然后在达到最大值后将时钟重置为零。在每次模拟开始时，所有萤火虫都会从其周期的随机点开始（尽管它们的周期长度都相同），因此整个群体的闪烁会不规则地发生。当萤火虫感知到周围的其他闪光时，它们能够利用此信息重置自己的时钟，以尝试与附近的其他萤火虫同步。每只萤火虫都使用同一套规则来管理自己的时钟，并且根据模拟的参数，群体的同步效果可能会或多或少。

## 如何这个模型怎么用

GO：开始和停止模拟。

SETUP：根据滑块设置的参数重置模拟。

NUMBER：设置要创建的萤火虫的数量。

CYCLE-LENGTH：设置每个萤火虫时钟在重置为 0 之前的长度。

FLASHES-TO-RESET：设置萤火虫在其时钟重置之前在一个周期中必须看到的闪烁次数。

闪光长度：设置每次闪光的持续时间（以刻数为周期）。

策略：设置当萤火虫看到周围有足够多的萤火虫闪烁时要使用的同步策略（“足够”由 FLASHES-TO-RESET 定义）。有两种可能的策略：

- **“延迟”**：萤火虫将其时钟重置为闪光长度（通常在闪光发生后）。这会导致萤火虫与它正在响应的萤火虫的下一次闪光同步。

- **“提前”**：萤火虫立即闪烁。使用此策略时，萤火虫只能在闪烁后两个周期开始的窗口内开始重置其时钟。这确保了闪烁不会陷入短暂的循环中，在此循环中它们会持续重置时钟并无限期地保持亮起。

SHOW-DARK-FIREFLIES?：如果开关设置为开启，不闪烁的萤火虫将显示为灰色。如果开关设置为关闭，不闪烁的萤火虫将显示为黑色，因此不可见。

在按下 SETUP 按钮之前，需要设置一些设置。对 NUMBER、STRATEGY 和 FLASH-LENGTH 滑块的更改不会对正在进行的模拟产生影响。另一方面，FLASHES-TO-RESET、CYCLE-LENGTH 和 SHOW-DARK-FIREFLIES? 可以修改，并且在模拟运行时会产生影响。

## 看一看

使用默认设置（数量：1500、周期长度：10、闪光长度：1、闪光次数：1、闪光重置：1、策略：“延迟”），注意同步的局部群集如何开始形成。看看您是否能找出每个群集在图表上的位置。随着模拟的进行，尝试确定哪个局部群集最终将“接管”种群。这个群集最初在图表上有最高的峰值吗？

在相位前进模拟中，为什么图表通常在峰值达到整个种群之前达到顶峰？

在这个模型中，萤火虫在闪光过程中无法重置其周期。为什么要施加这种限制？

## 试一试

在默认设置下使用“延迟”策略运行模型。将 FLASHES-TO-RESET 更改为 2，然后使用“提前”策略运行模型（同时保持其他设置不变）。哪种策略似乎更有效？为什么？

尝试使用相位延迟和相位提前设置将 FLASHES-TO-RESET 调整为 0、1 和 2 之间。请注意，每个设置都会产生特征不同的图表，其中一些根本不允许同步（例如，使用延迟策略，对比 FLASHES-TO-RESET 设置为 1 而不是 2）。为什么这种控制会对模拟结果产生如此大的影响？

改变模拟中的萤火虫数量会影响种群密度（调整世界大小也会影响种群密度）。这会对模拟产生什么影响？

## 改一改

该模型仅探讨了在这种受周期控制的萤火虫中实现同步的两种一般策略。你能找到其他策略吗？你能改进现有的策略吗（即通过加快速度）？

还有许多其他可能的情况，在这些情况下，分布式主体必须通过使用简单的规则来同步其行为。如果昆虫不是只感知其他离散的闪光，而是能够感知另一只昆虫在其周期中的位置（可能是通过听到越来越响的嗡嗡声）会怎么样？在这种情况下，什么样的同步策略可能会有用？

如果所有萤火虫都有可调节的周期长度（最初设置为随机间隔），那么是否有可能协调它们的周期长度和闪烁？

引入一些盲萤火虫。这些策略如何应对这一变化？

##  NetLogo 语言特性

注意使用主体集合集来计数附近闪烁的萤火虫的数量：

计算半径 1 内的海龟数量，颜色为 [黄色]

## 引用和致谢

Buck, John. (1988). Synchronous Rhythmic Flashing of Fireflies. The Quarterly Review of Biology, September 1988, 265 - 286.

Carlson, A.D. & Copeland, J. (1985). Flash Communication in Fireflies. The Quarterly Review of Biology, December 1985, 415 - 433.

## 如何引用本模型

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (1997).  NetLogo Fireflies model.  http://ccl.northwestern.edu/netlogo/models/Fireflies.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## 版权和授权

Copyright 1997 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the project: CONNECTED MATHEMATICS: MAKING SENSE OF COMPLEX PHENOMENA THROUGH BUILDING OBJECT-BASED PARALLEL MODELS (OBPML).  The project gratefully acknowledges the support of the National Science Foundation (Applications of Advanced Technologies Program) -- grant numbers RED #9552950 and REC #9632612.

This model was converted to NetLogo as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227. Converted from StarLogoT to NetLogo, 2001.

<!-- 1997 2001 -->