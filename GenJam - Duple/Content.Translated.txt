*** 1d9b324d51b0a5cdea13d2e026a86a1c
## 这个模型是什么？

该模型使用遗传算法生成鼓节奏。使用西非鼓圈的节奏“规则”，低、中、高鼓模式与进化协同工作，创造出即兴节拍。这是该模型的“双重”版本，其中每条染色体有 4 个“节拍”。

在许多西非国家，音乐是文化不可或缺的一部分。特别是在塞内加尔，鼓和打击乐器既是表演的焦点，也是礼仪环境中的特色。西非鼓乐合奏表演盛况空前，色彩艳丽的服装、形状和大小各异的鼓，以及色彩丰富、节奏复杂的音乐。这些表演是丰富、交叉和多节奏发展的阶段，因为许多“歌曲”只是即兴的框架。在塞内加尔，三种不同的鼓组成了典型的合奏：一种称为 dundun 的低音鼓，一种称为 sabar 的中音鼓，以及一种称为 djembe 的高音鼓。

在表演期间，鼓手会倾听并与其他表演者融合，以创造观众听到的丰富声音。节奏根据独奏、集群和“强弱节拍感”的衰减而不断演变。该模型展示了一种尝试以西非鼓乐风格自动生成令人愉悦的鼓节奏的方法。虽然大多数自动生成音乐的尝试都依赖于让人类选择他们喜欢的节奏，但该模型试图在不明确询问人类是否喜欢特定节奏的情况下生成节奏。

[遗传算法](https://en.wikipedia.org/wiki/Genetic_algorithm#) 是计算机科学中用于生成优化和搜索问题解决方案的工具。它依靠受生物学启发的技术来“搜索”参数空间以获得“最佳解决方案”。关键在于使用像染色体这样的“遗传物质”来表示给定的问题。然后，该算法使用[选择](https://en.wikipedia.org/wiki/Genetic_algorithm#Selection)、[交叉](https://en.wikipedia.org/wiki/Genetic_algorithm#Genetic_operators)、和 [突变](https://en.wikipedia.org/wiki/Genetic_algorithm#Genetic_operators) 来“进化”解决方案。

## 这个模型是怎么运行的

### 是什么让这些节奏演变？

基本思想使用了计算机科学中遗传算法的概念。遗传算法旨在将“生物体”与“染色体”结合起来，并模拟它们朝着某种目标进化（因此随着时间的推移，生物体具有更高的“适应性”）。在这个例子中，鼓手是我们的有机体，每个人都有一套染色体，由击打和休息组成，代表他们演奏的节奏。

共有 16 个鼓：5 个高鼓手、5 个中鼓手和 6 个低鼓手。这里我们用“low”、“medium”和“high”来描述鼓的音高和音色。每个鼓手（一只看不见的海龟）都有一组“节奏染色体”，它们决定了它演奏的鼓模式。

在这个模型中，每个节律染色体由 4 个二进制数字的列表表示。 “0”表示休息，而“1”表示命中。在这个模型中，您可以将这些数字中的每一个都视为“十六分音符”，这样每个染色体就代表一个“节拍”。这意味着有 2^4 = 16 种不同类型的染色体。

构成鼓手遗传密码的染色体数量由用户指定。默认数字是 4（对于喜欢音乐的人来说，会产生“四四”拍号）。

一开始，每个玩家都以完全相同的染色体开始（每个玩家只玩悲观的）。每个玩家与其他玩家同步播放其染色体（即所有海龟演奏 0 号染色体的音符 0，然后是 0 号染色体的音符 1，等等）。在海龟完成染色体节律后，海龟“进化”。

每次演奏完他们的遗传节奏后，每种类型的鼓手（高、中、低鼓手）都会选择两个来“复制”和“进化”。每只海龟根据适应度函数（每个种类不同）选择配偶。适应度较高的海龟更有可能被选为配偶。

在西非鼓乐中，低音鼓手被认为是节奏的基础。因此，他们的适应度取决于他们玩的强节拍（即每条染色体中的第 0 和第 2 个条目）的数量。

中鼓手通常比低鼓手更独奏，但通常强调另类。因此，他们的适应度是根据他们玩的非节拍（即每条染色体中的第 1 和第 3 个条目）的数量来评估的。

最后，高级鼓手被认为是乐团的独奏者。他们提供有节奏的张力，并且倾向于成群结队地演奏。因此，他们的适应度取决于他们玩的 3 簇 [0 1 1 1] 的数量，无论他们在模式中的位置如何。

一旦选择了配偶对，每个配偶都会选择 1 到 4 条染色体来为后代做出贡献（总共 4 条）。这种遗传物质被组合起来，并根据用户参数进行随机突变。这套新的遗传物质被认为是新的后代。然后，这个后代取代了最初选择进化的鼓手类型中最不适合的成员。

一旦发生这种演变，整个过程就会再次重复！

这在几个方面不同于“纯”遗传算法。首先，被选中“进化”的海龟是随机选择的。这是一个不应显着影响模型演变的设计决策。此外，我们通过在每一轮进化后“杀死”每个种类中最不适合的成员，将人口限制在 16 名鼓手。

### 视图显示的世界是什么？

该模型以非标准方式使用 NetLogo 视图。该模型不显示主体交互，而是使用视图来显示主体的属性。每行补丁代表一个鼓手的模式。彩色格子代表命中，而黑色格子代表休息。这样，用户可以同时查看所有 16 个鼓手的模式。

当用户单击任何一个 GO 按钮时，一个垂直的黄色条会在视图中移动并指示每只海龟在节奏中的位置。

## 这个模型怎么用

这个模型的整个想法是对参数进行试验，以建立一个“伟大”的节奏。什么是伟大的节奏完全取决于你。

### 界面元素
在按下 SETUP 按钮之前必须设置两个界面元素：

1. NUM-CHROMOSOMES - 这指定了每个玩家拥有的节奏染色体的数量
2. 洗牌？ - 这只是一个 GUI 更改，在视图中绕着玩家的行移动（只是为了让事情看起来更酷）

SETUP 按钮用于创建主体和更新显示。它还会导致播放测试音以确保声音扩展正常工作并且您的扬声器未静音

GO-ONCE 用于要求所有海龟只玩一次他们的模式然后进化

GO是用来循环播放和进化的过程，一遍又一遍

GO-ONCE-NO-EVOLVE 可以用来在没有进化的情况下只播放一次任何特定的模式

GO-NO-EVOLVE 用于在没有进化的情况下一遍又一遍地循环模式

声音？用于切换声音输出

TEMPO-BPM 改变每个模式的播放速度（以每分钟节拍（或染色体）为单位）

### 进化参数

HIT-LIMIT 定义了海龟在不被迫以某种方式进化的情况下可以走多长时间。同样，这与传统的遗传算法略有不同，但可用于逃避“陈旧”的节奏

HIT-DENSITY-MODIFIER 是一个修饰符，用于指定模式应该有多“密集”（命中与休息）

NUM-MUTATIONS 是应用于后代染色体的突变数量

突变强度决定了特定染色体可以突变的程度

SOLOER 是一个选择器，可让您挑选一位鼓手进行独奏

独奏？指示是否允许 SOLOER 独奏。这意味着 SOLOER 的鼓声更大，而其他海龟的鼓声更小。此外，SOLOER 将具有最大的适应性

### 模型输出

GENERATIONS 统计我们见过多少代玩家

DENSITY 表示当前命中与休息的比率

以下是模型的图表：

AVERAGE FITNESS图表了每种海龟的平均适应度和随时间推移的平均整体适应度

HITS SINCE EVOLUTION 是一个直方图，显示自每个玩家“进化”以来的时间

HITS PER DRUMMER 是一个直方图，显示每个玩家完成的击打次数

## 看一看

当您第一次启动模型时，每个人都从相同的染色体开始。因此，如果您通过使 MUTATION-STRENGTH 为 0 来禁用突变，您的模型将不会进化！那是因为相同的染色体只是为每个玩家组合在一起。

请注意，有时，一只海龟会在附近停留很长时间（因为它非常适合！）

检查每个鼓手的点击次数图表。在运行模型的过程中，您是否看到任何总体趋势？为什么会出现这种趋势？

请注意，SOLO 功能不仅让一个玩家声音更大，它还让玩家不会进化或变异。这对模型有何影响？

## 试一试

使用 SOLO 功能强制节奏围绕单个稳定的玩家演变。

试着创造一种节奏，让所有三种类型的玩家都“同样”适合！

尝试在高音鼓非常稀疏的地方发展出一种节奏。

查看创建“复杂”仪表如何改变您听到节拍的方式。一个简单的方法是将 NUMBER-CHROMOSOMES 设置为 5，看看您是否能听到乐句。

## 改一改

尝试改变海龟的乐器声音。你能通过改变乐器从鼓圈感觉切换到更摇滚的感觉吗？

添加更多类型的鼓手。看看这如何改变进化。

改变每个种类的配偶标准，看看这对节奏的演变有何影响。

尝试添加海龟玩三胞胎的能力！这会使节奏变得非常酷，但需要一点扭曲时间！ （提示：检查声音扩展中的稍后播放原语）

## NetLogo 语言特性

请注意，此模型通过使用 wait 原语有意减慢 NetLogo世界的速度。那是因为音乐不会尽可能快地发生！不幸的是，这对第一个周期不起作用，因此“第一拍”和“第二拍”之间的间隔不等于其余节拍之间的间隔。

## 相关模型

Check out the Sound Machines and Drum Machine models in the Models Library!

## 如何引用本模型

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Bain, C. and Wilensky, U. (2017).  NetLogo GenJam - Duple model.  http://ccl.northwestern.edu/netlogo/models/GenJam-Duple.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## 版权和授权

Copyright 2017 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

<!-- 2017 Cite: Bain, C. -->