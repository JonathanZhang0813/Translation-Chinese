*** 1d9b324d51b0a5cdea13d2e026a86a1c
## 这个模型是什么？

该模型使用 NetLogo海龟重复绘制圆圈，周期性转动，使显示给人一种万花筒或风车的印象。它展示了一组简单的主体规则如何产生复杂而美丽的模式。

## 这个模型是怎么运行的

该模型的内部工作原理非常简单。许多海龟是在笔尖向下的情况下创建的（无论它们移动到哪里，它们都会画出一条轨迹）。在每周期，每只原始海龟都会孵化出一只新的“画图海龟”，它唯一的工作就是画一个圆圈，然后立即死亡。在两次孵化之间，原始海龟唯一做的就是慢慢旋转。虽然模型有两种内置模式，但都跟随相同的规则集，唯一的区别是 PATTERN-2 中一半的画图海龟逆时针画圆，而 PATTERN-1 中的所有海龟顺时针画圆.

## 这个模型怎么用

NUM-TURTLES滑块真正决定了万花筒将拥有的“臂”或“花瓣”的数量。首先将此滑块设置为所需的值（10 就可以）。

接下来，将 COLOR-SEP 设置为某个值。 COLOR-SEP 确定海龟（以及万花筒）将呈现的颜色范围。值越高，范围越小。对于漂亮的三色万花筒，将 COLOR-SEP 设置为 25。COLOR-SEP 与颜色范围之间的这种反比关系是由于 COLOR-SEP 作为常数除以海龟的颜色。

当您设置了 NUM-TURTLES 和 COLOR-SEP 后，按下 SETUP 按钮让您的模型准备好画图。

接下来，选择您想要的图案。每个模式都有自己的永久按钮来控制它。 PATTERN-1 的万花筒臂都是顺时针螺旋的，而 PATTERN-2 的万花筒臂在顺时针和逆时针方向都螺旋，设计稍微复杂一些。

最后，您可以更改此模型所显示的颜色分布。 COLOR-SHIFT 按钮将增加或减少海龟使用的 COLOR-SEP 值——在内部保存为 CURR-COLOR-SEP。因此滑块值本身并没有改变，但是海龟看到的数字在不断变化。这个数字被一个小的随机量改变。增加颜色？开关确定 CURR-COLOR-SEP 是增加 (true) 还是减少 (false)。

您还有一个监视器 CURR-COLOR-SEP，它将显示该变量的值，以便您知道它何时被更改以及更改了多少。

## 看一看

首先，试着玩一下，观察会发生什么。这是一个仅供观看的视觉上令人愉悦的模型。查看 NUM-TURTLES 和 COLOR-SEP 产生的不同值，并探索 COLOR-SHIFT 如何改变万花筒的外观。什么对你来说最好？

这里需要注意的一件重要事情是 COUNT-TURTLES 中给出的数字。马上，它变得比 NUM-TURTLES 大得多，但很快就确定了一个不错的大数字。查看程序窗口。这里实际上有两个级别的海龟命令。最初，在设置时，有 NTURTLES 数量的海龟。一旦按下其中一个模式按钮，这些海龟（组成万花筒的“手臂”）中的每只都会反复孵化出一只新海龟并转动一个度数。刚孵出的海龟开始画圈，完成后自毁。由于“手臂”海龟执行命令的速度比孵化的海龟快得多，因此在一个循环中它们会生产很多海龟；然而，最终，海龟开始死亡。此时，出生的海龟数量大致等于在任何给定步骤死亡的海龟数量。

您还应该注意 COLOR-SEP（或真正的 CURR-COLOR-SEP）如何改变万花筒的外观。转动 COLOR-SHIFT？ on，并让 CURR-COLOR-SEP 变得非常大。然后观察当它很小时会发生什么，可能是零或某个负数。

## 试一试

尝试更改“代码”选项卡中的代码。增加每只海龟绘制的圆圈的大小，或尝试改变每只海龟转过的角度的大小。

与其让每只海龟移动或转动一个给定的量，不如让它移动一个小的随机量（就像从 COLOR-SHIFT 到 curr-color-sep 的变化一样）。您可以添加多少随机性并仍然保持某种整体结构？

## 改一改

每当一只“手臂”海龟孵化出一只海龟时，它就会开始画一个圆圈。更改 `hatch` 命令列表，使其绘制一些其他图形或图案。尝试预测会出现什么整体图形。

目前，这两种模式之间的唯一区别是 PATTERN-2 有一半的“手臂”海龟圈在左边，另一半在右边。编写您自己的模式——即，提出一个或一组新命令供这些海龟执行。

尝试按照类似的思路编写一种全新的模型。在当前模型中，海龟从 NTURTLES海龟的中心核心分离出来。在您的新模型中，画图海龟可能会围绕某个固定（或移动）点运行，就像在 StarLogoT 模型 N Bodies 和 Gravitation 中一样。

## NetLogo 语言特性

这很好地利用了海龟原语“hatch”。每当海龟孵化时，它都会执行 `hatch` 命令后面的命令列表。在大多数情况下，这仅用于更改新海龟的颜色或更改某些变量。但是没有理由它不能运行其他一些可能很长的过程，而这正是这里发生的情况。

## 致谢

感谢 Connor Bain 在 2021 年更新了这个模型。

## 如何引用本模型

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (1998).  NetLogo Kaleidoscope model.  http://ccl.northwestern.edu/netlogo/models/Kaleidoscope.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## 版权和授权

Copyright 1998 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the project: CONNECTED MATHEMATICS: MAKING SENSE OF COMPLEX PHENOMENA THROUGH BUILDING OBJECT-BASED PARALLEL MODELS (OBPML).  The project gratefully acknowledges the support of the National Science Foundation (Applications of Advanced Technologies Program) -- grant numbers RED #9552950 and REC #9632612.

This model was converted to NetLogo as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227. Converted from StarLogoT to NetLogo, 2001.

<!-- 1998 2001 -->